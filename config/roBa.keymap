#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        BS {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 18>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <7 6>;
        };

        hyphen {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        redo {
            bindings = <&kp LC(Y)>;
            key-positions = <17 18>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <12 13>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <11 12>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <24 25>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <13 14>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <19 20>;
        };
    };

    macros {
        setphrase1: setphrase1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp LS(S) &kp H &kp O &kp W &kp A &kp N3 &kp N7 &kp N1 &kp N2 &kp N0 &kp N5>;
            label = "SETPHRASE1";
        };

        setphrase2: setphrase2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp H &kp O &kp S &kp H &kp I &kp N &kp O &kp MINUS &kp T &kp A &kp K &kp E &kp S &kp H &kp I &kp LEFT_BRACKET &kp M &kp K &kp I &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "SETPHRASE2";
        };

        setphrase3: setphrase3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp H &kp O &kp S &kp H &kp I &kp N &kp O &kp LEFT_BRACKET &kp P &kp T &kp U &kp N &kp E &kp D &kp DOT &kp N &kp E &kp T>;
            label = "SETPHRASE3";
        };

        addquotechar: addquotechar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LANGUAGE_2 &kp GT &kp HOME &kp DOWN>;
            label = "ADDQUOTECHAR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LCTRL Q       &kp W         &kp E         &kp R           &kp T                                        &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F           &kp G      &none                &none        &kp H        &kp J  &kp K      &lt 3 L  &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V           &kp B      &kp ESCAPE           &none        &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_HENKAN  &sk LCTRL  &lt 1 BACKSPACE      &lt 2 SPACE  &lt 2 SPACE                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SPECIALCHAR {
            bindings = <
&none             &kp AT             &kp EXCL    &kp HASH         &kp PLUS                            &kp COLON  &kp MINUS             &kp DOUBLE_QUOTES  &kp SLASH  &kp PERCENT
&kp LEFT_BRACKET  &kp AMPS           &kp DOLLAR  &kp CARET        &kp LEFT_BRACE  &none       &none   &kp UNDER  &kp SINGLE_QUOTE      &kp SEMI           &kp AMPS   &kp AT
&none             &kp DOUBLE_QUOTES  &kp EQUAL   &kp LS(INT_YEN)  &kp INT_YEN     &none       &none   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACKET  &kp HASH   &kp SLASH
&trans            &trans             &trans      &trans           &trans          &trans      &trans  &trans                                                         &none
            >;
        };

        ARROW {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                      &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0
&none         &none         &none         &none         &none         &none       &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none         &none         &none         &none         &none         &none       &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                         &none
            >;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5                             &setphrase1   &setphrase2   &setphrase3    &trans  &trans
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &out OUT_BLE  &kp LANG2     &kp LANG1     &addquotechar  &trans  &trans
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans      &out OUT_USB  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &trans  &bt BT_CLR
&trans   &trans   &trans   &trans   &trans   &trans      &trans        &trans                                             &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MCLK  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5      &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &mkp MB3
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
