#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R           &kp T                                          &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F           &kp G      &none                &kp BACKSPACE  &kp H        &kp J  &kp K      &lt 3 L  &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V           &kp B      &none                &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_HENKAN  &sk LCTRL  &lt 1 BACKSPACE      &lt 2 SPACE    &lt 2 SPACE                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SPECIALCHAR {
            bindings = <
&none        &kp DOUBLE_QUOTES  &kp EXCL    &kp HASH    &kp TILDE                          &kp PLUS              &kp MINUS              &kp ASTRK         &kp SLASH          &kp PERCENT
&kp AT_SIGN  &kp SINGLE_QUOTE   &kp DOLLAR  &kp DOLLAR  &kp GRAVE      &none       &none   &kp EQUAL             &kp COLON              &kp SEMI          &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES
&none        &kp ASTERISK       &kp CARET   &kp PIPE    &kp BACKSLASH  &none       &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH
&trans       &trans             &trans      &trans      &trans         &trans      &trans  &trans                                                                            &none
            >;
        };

        ARROW {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                      &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0
&none         &none         &none         &none         &none         &none       &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none         &none         &none         &none         &none         &none       &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                         &none
            >;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5                             &trans            &trans          &trans        &trans  &trans
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &out OUT_BLE  &kp INT_MUHENKAN  &kp INT_HENKAN  &trans        &trans  &trans
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans      &out OUT_USB  &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2  &trans  &bt BT_CLR
&trans   &trans   &trans   &trans   &trans   &trans      &trans        &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MCLK  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5      &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &mkp MB3
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
